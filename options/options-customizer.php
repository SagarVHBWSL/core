<?php
/**
 * FIXME: Edit Title Content
 *
 * FIXME: Edit Description Content
 *
 * Please do not edit this file. This file is part of the Response core framework and all modifications
 * should be made in a child theme.
 * FIXME: POINT USERS TO DOWNLOAD OUR STARTER CHILD THEME AND DOCUMENTATION
 *
 * @category Response
 * @package  Framework
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v2.0 (or later)
 * @link     http://www.cyberchimps.com/
 */

// create the admin menu for the theme options page
add_action('admin_menu', 'response_admin_add_customizer_page');
function response_admin_add_customizer_page() {
	// add the Customize link to the admin menu
	add_theme_page( __('Customize', 'response'), __('Customize', 'response'), 'edit_theme_options', 'customize.php' );
}

add_action('customize_register', 'response_customize');
function response_customize($wp_customize) {

	$wp_customize->add_section( 'themedemo_demo_settings', array(
		'title'          => 'Demonstration Stuff',
		'priority'       => 35,
	) );

	$wp_customize->add_setting( 'response_options[core_text]', array(
		'default'        => 'default_value',
		'type'           => 'option',
	) );

	$wp_customize->add_control( 'core_text', array(
		'label'   => 'Text Setting',
		'section' => 'themedemo_demo_settings',
		'type'    => 'text',
		'settings'   => 'response_options[core_text]',
	) );
}

/* TODO: Merge this with above

// TODO: Rename and Restructure Code for Theme Options
add_action( 'customize_register', 'themename_customize_register' );
function themename_customize_register($wp_customize) {

$wp_customize->add_section( 'themename_color_scheme', array(
	'title'          => __( 'Color Scheme', 'themename' ),
	'priority'       => 35,
) );


$wp_customize->add_setting( 'plugin_options[core_color]', array(
	'default'        => '#000000',
	'type'           => 'option',
	'capability'     => 'edit_theme_options',
	'transport'		=> 'postMessage',
) );


$wp_customize->add_control( new WP_Customize_Color_Control( $wp_customize, 'core_color', array(
	'label'   => __( 'Link Color', 'themename' ),
	'section' => 'themename_color_scheme',
	'settings'   => 'plugin_options[core_color]',
) ) );

if ( $wp_customize->is_preview() && ! is_admin() )
	add_action( 'wp_footer', 'themename_customize_preview', 21);
	
}

function themename_customize_preview() {
	?>
	<script type="text/javascript">
	wp.customize('plugin_options[core_color]',function( value ) {
		value.bind(function(to) {
			jQuery('body').css('background', to );
		});
	});
	</script>
	<?php 
}
*/